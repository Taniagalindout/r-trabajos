install.packages(c(‘repr’, ‘IRdisplay’, ‘evaluate’, ‘crayon’, ‘pbdZMQ’, ‘devtools’, ‘uuid’, ‘digest’))
install.packages(c(‘repr’, ‘IRdisplay’, ‘evaluate’, ‘crayon’, ‘pbdZMQ’, ‘devtools’, ‘uuid’, ‘digest’))
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
IRkernel::installspec()
IRkernel::installspec(user = FALSE)
a->3
a=3
a<-2
help("print")
?"print"
?log
log(a)
w=7
log(w)
texto<-"Hola"
texto.corto<."hol"
texto.corto<-"hol"
clearPushBack()
rm(list=ls)
rm(list=ls())
?vector
ventas <- c(120, 140, 90, 75, 110)
names(ventas) <- c("enero", "febrero", "marzo", "abril", "mayo")
mean(ventas)
ventas_mayores_a_100 <- ventas[ventas > 100]
mes_con_mayores_ventas <- names(ventas)[which.max(ventas)]
rm(list=ls())
ventas <- c(120, 140, 90, 75, 110)
nombres(ventas) <- c("enero", "febrero", "marzo", "abril", "mayo")
names(ventas) <- c("enero", "febrero", "marzo", "abril", "mayo")
mean(ventas)
ventas_mayores_a_100 <- ventas[ventas > 100]
mes_con_mayores_ventas <- names(ventas)[which.maas)]
rm(list = ls()=)
media<-mean(ventas)
mes_con_mayores_ventas <- names(ventas)[which.maas)]
mes_con_mayores_ventas <- names(ventas)[which.max(ventas)]
matriz<-matriz(vector,nrow=2)
matriz
vector<-(1:10)
matriz<-matriz(vector,nrow=2)
data()
mtcars
carros<-mtcars
carros
mtcars.mpg
mtcars().mpg
orden.de <- order(-mtcars['mpg'])
orden<- order(mtcars['mpg'])
orden<- order(mtcars['mpg'])
orden<- order(mtcars['mpg'])
datos [orden,]
orden<- order(mtcars['mpg'])
carros [orden,]
ordenar<- subset(mtcars,cly %in% c(4,6))
ordenar<- subset(mtcars,cyl %in% c(4,6))
ordenar
ordenar3<-subset(mtcars,menores=mpg<=20.0)
ordenar3
ordenar3<-subset(mtcars,subset = mpg<=20.0)
ordenar3
calificaciones <- c(9,8,10,10,10)
calificaciones
resultado = prod(calificaciones)^(1/length(calificaciones)))
resultado = prod(calificaciones)^(1/length(calificaciones))
resultado = prod(calificaciones)^(1/length(calificaciones))
resultado
suma = sum(calificaciones)
media = mean(calificaciones)
media = mean(calificaciones)
media
volumen <- function(a,b, type){
switch(type,
prismaTriangular=(a*b)/2
)
}
volumen(2,3, "prismaTriangular")
volumen(2,3, "prismaTriangular")
volumen <- function(a,b,h, type){
switch(type,
prismaTriangular=((a*b)/2)*h,
prismaRectangular = (a*b)*h,
)
}
volumen(2,3, "prismaTriangular")
volumen <- function(a,b,h, type){
switch(type,
prismaTriangular=((a*b)/2)*h,
prismaRectangular = (a*b)*h,
circular = (3.1416*(3*3))*h
)
}
volumen(5, "circular")
volumen <- function(a,b,h, type){
switch(type,
prismaTriangular=((a*b)/2)*h,
prismaRectangular = (a*b)*h,
circular = (a*(b*b))*h
)
}
volumen(3.1416,3,5, "circular")
volumen(4,3,5, "prismaRectangular")
volumen <- function(a,h, type){
switch(type,
prismaTriangular=((a)/2)*h,
prismaRectangular = (a)*h,
circular = (a)*h
)
}
volumen(5,9, "prismaTriangular")
volumen(4,8, "prismaRectangular")
volumen(28.2744,8, "circular")
volumen((3.1416*(3*3)),8, "circular")
volumen(5,10, "circular")
volumen(4,8, "circular")
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
maraton <- read.csv("maraton_ny.csv")
10/7
10%%7
10/7
10%%7
10%/%7
?class
??graph
func1 <- function (x, arithmetic=TRUE){
if(is.character(x) | is.logical(x)){
print("El argumento no es numerico")
}else{
if(arithmetic==TRUE){
sum(x)/length(x)
}else{
prod(x)^(1/length(x))
}
}
return("Hola")
}
resultado <- func1(c(1,2,3), TRUE)
func1 <- function (x, arithmetic=TRUE){
if(is.character(x) | is.logical(x)){
print("El argumento no es numerico")
}else{
if(arithmetic==TRUE){
sum(x)/length(x)
}else{
prod(x)^(1/length(x))
}
}
return("Hola")
}
resultado <- func1(c(1,2,3), TRUE)
resultado
d<- 5:1
d
e <- seq(1,5, by=1.5)
e
f<- rep(2:4, times=4)
f
g<- sacan()
g<- scan()
11
g<- scan()
g
g<- scan()
g
g<- scan()
g <- scan()
g <- scan()
g <- scan()
g <- scan()
g
inventario<- c ('Manzana'=30,'Platano'=8,'Sandia'=6)
inventario
names(vector)<- c("posicion 1", "posicion 2", "posicion 3", "posicion 4")
names(vector)<- c("posicion 1", "posicion 2", "posicion 3", "posicion 4")
names(c)<- c("posicion 1", "posicion 2", "posicion 3", "posicion 4")
inventario2 <- c(inventario, 'pera'=10)
inventario2
invetario3 <- union(invetario,c('pera'=10))
invetario3 <- union(inventario,c('pera'=10))
invetario3
inventario<- c ('Manzana'=30,'Platano'=8,'Sandia'=6)
inventario
inventario[c(1,3)]
inventario[-3]
inventario[-(2:3)]
inventario['manzana']
inventario['Manzana']
inventario <- inventario[-3]
inventario
inventario<- c ('Manzana'=30,'Platano'=8,'Sandia'=6)
inventario[inventario<10]
inventario[inventario ==6]
inventario[inventario %in% c(2,3,6,30)]
inventario[inventario %in% 2:30]
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
maraton <- read.csv("maraton_ny.csv")
View()
View()
View(maraton)
maraton$age
maraton$gender
maraton[3,4]
maraton[1:10, 1:2]
setwd("C:\\Users\\CC7\\Documents\\Archivos")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,
row.names = 1,
sep=",",
dec = ".")
View(maraton)
maraton[3,4]
maraton[, c(1,5)]
maraton[c(1,100),]
maraton[1:100,]
View(maraton[maraton$gender=='female',])
View(maraton[maraton$gender=='Female',])
max(maraton$age)
min(maraton$age)
mean(maraton$age)
min(maraton$time)
View(maraton[,-3])
dimension <- dim(maraton)
typeof(dimension)
str(dimension)
rank(maraton$time)
rank(inventario)
max(maraton$age)
which.max(maraton$age)
maraton[106,]
maraton[765,]
source("C:/Users/CC7/ArchivosP/r-trabajos/R/RProjects/Ejercicio1.R")
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
maraton <- read.csv("house_rental.csv",
header = TRUE,
row.names = 1,
sep=",",
dec = ".")
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
house_rental <- read.csv("house_rental.csv",
header = TRUE,
row.names = 1,
sep=",",
dec = ".")
View(house_rental)
??count
count(maraton)
??count
sum(house_rental[house_rental$Price>=60000 & house_rental$Price<=80000,5])
sum(house_rental[house_rental$Price>=60000 & house_rental$Price<=80000,6])
sum(house_rental[house_rental$Price>60000 & house_rental$Price<80000,4])
sum(house_rental[house_rental$Price>=60000 & house_rental$Price<=80000,4])
