md.pattern(contaminacion)
contaminacion[!complete.cases(contaminacion),]
duplicated(contaminacion)
duplicated(contaminacion)
contaminacion[duplicated(contaminacion)]
contaminacion[duplicated(contaminacion),]
contaminacion[!duplicated(contaminacion),]
sum(contaminacion$CN)
sum(contaminacion$CN, na.rm = TRUE)
is.na(contaminacion)
contaminacion$CN_P <-ifalse(is.na(contaminacion$CN),
mean(contaminacion$CN, na.rm = TRUE),
contaminacion$CN)
contaminacion$CN_P <- ifalse(is.na(contaminacion$CN),
mean(contaminacion$CN, na.rm = TRUE),
contaminacion$CN)
contaminacion$CN_P <- ifelse(is.na(contaminacion$CN),
mean(contaminacion$CN, na.rm = TRUE),
contaminacion$CN)
contaminacion
install.packages("modeest")
library("modeest")
mfv(contaminacion)
b <- data.frame(v1=c("a", "b","c","d"), v2=c"hola", "hola", NA, "adios"))
b <- data.frame(v1=c("a", "b","c","d"), v2=c"hola", "hola", NA, "adios"))
b <- data.frame(v1=c("a", "b","c","d"), v2=c"hola", "hola", NA, "adios"))
b <- data.frame(v1=c("a","b","c","d"), v2=c"hola", "hola", NA, "adios"))
b <- data.frame(v1=c("a","b","c","d"), v2=c"hola", "hola", NA, "adios"))
b <- data.frame(v1=c("a","b","c","d"), v2=c("hola", "hola", NA, "adios"))
b$v2_moda <- ifelse(is.na(b$v2), mfv(b$v2, na_rm=TRUE), b$v2)
b
install.packages("DMwR")
library("DMwR")
library("DMwR2")
library(DMwR2)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
contaminacion <- read.csv("contaminacion.csv",
header = TRUE,
sep=",",
dec = ".")
View(contaminacion)
kcontaminacion <- knnImputation(contaminacion)
kcontaminacion
contaminacion
kcontaminacion
rivers
plot(rivers)
boxplot(rivers)
boxplot(rivers, TRUE)
boxplot(rivers, horizontal=TRUE)
boxplot.stats(rivers)
stats <- (boxplot.stats(rivers)$stats)
stats
min(stats)
max(stats)
inferior <- (stats[1])
superior <- (stats[5])
inferior
superior
nuevo <-rivers[rivers<superior & rivers>inferior]
boxplot(nuevo)
nuevo
plot(nuevo)
minimo1<- min(boxplot.stats(rivers)$out)
minimo1
for(i in 1:length(minimo1)){
rivers1 <- rivers[rivers<minimo1]
}
rivers
variable <- boxplot.stats(rivers)
nuevo <- rivers
inferior <- variable$stats[1]
superior <- variable$stats[5]
nuevo <- nuevo [nuevo < superior & nuevo > inferior]
variable <- boxplot.stats(rivers)
nuevo <- rivers # Limpia los outliers
while(length(variable$out)>0){ # Calcula longitud
#Calcular inferior
inferior <- variable$stats[1]
# Calcular superior
superior <- variable$stats[5]
nuevo <- nuevo [nuevo < superior & nuevo > inferior]
variable <- boxplot.stats(nuevo)
}
boxplot(nuevo)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,
row.names = 1,
sep=",",
dec = ".")
View(maraton)
maraton$nivel <- cut(maraton$time, breaks = 3,
labels = c("alto", "medio", "bajo"))
View(maraton)
install.packages("scales")
library(scales)
(data_conv$Age-min(data_conv$Age))/(max(data_conv$Age)-min(data_conv$Age))
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
data_conv <- read.csv("data-conversion.csv")
(data_conv$Age-min(data_conv$Age))/(max(data_conv$Age)-min(data_conv$Age))
rescale(data_conv$Age)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
salary <- read.csv("salary.csv")
scale(salarios[,c(1,2)])
scale(salary[,c(1,2)])
boxplot(salary$years, salary$salary)
plot(salary$years, salary$salary)
plot(scale(salary[,c(1,2)]))
grafica<-scale(salary[,c(1,2)])
plot(grafica)
plot(grafica)
plot(salary)
plot(grafica[,1])
plot(grafica[,2])
x <- sin(seq(0,4*pi, length.out=100))+rnorm(100,0,0.2)
library(scales)
x
plot(x, type="l")
sin(seq(0,4*pi, length.out=100))+rnorm(100,0,0.2)
x <- sin(seq(0,4*pi, length.out=100))
plot(x, type="l")
x <- sin(seq(0,4*pi, length.out=100))+rnorm(100,0,0.2)
plot(x, type="l")
lines(smoothing(x,method="smooth"),type="l", col="blue")
install.packages("modelbased")
library(modelbased)
lines(smoothing(x,method="smooth"),type="l", col="blue")
lines(smoothing(x,method="loess"),type="l", col="red")
x <- sin(seq(0,4*pi, length.out=100))+rnorm(100,0,0.2)
plot(x, type="l")
lines(smoothing(x,method="smooth"),type="l", col="blue")
lines(smoothing(x,method="loess"),type="l", col="red")
a<- matrix(c(19,138,1335,
138,1335, 14935.5,
1335, 14935.5,181427), nrow = 3)
# coeficientes a la izquiera del =
b <- matrix(c(649.5, 5306.6, 51666.75), nrow = 3)
solve(a,b)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
resistencia <- read.csv("resistencia.csv",
header = TRUE,
sep=",",
dec = ".")
View(resistencia)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
resistencia <- read.csv("resistencia.csv",
header = TRUE,
row.names = 1,
sep=",",
dec = ".")
View(resistencia)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datos <- read.csv("resistencia.csv",
header = TRUE,
row.names = 1,
sep=",",
dec = ".")
View(datos)
modelo <- lm(resistencia, concentracion,
data = datos)
modelo
modelo <- lm(resistencia, concentracion,
data = datos)
modelo
datos <- read.csv("resistencia.csv",
header = TRUE,
sep=",",
dec = ".")
View(datos)
modelo <- lm(resistencia, concentracion,
data = datos)
modelo
modelo <- lm(resistencia ~ concentracion,
data = datos)
modelo
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
marketing <- read.csv("marketing.csv",
header = TRUE,
sep=",",
dec = ".")
solve(a,b)
View(marketing)
modelomarketing <- lm(Sales ~ Spend,
data = marketing)
modelomarketing
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
marketing <- read.csv("marketing.csv",
header = TRUE,
sep=",",
dec = ".")
View(marketing)
marketing <- marketing[1:12,1:3]
View(marketing)
modelomarketing <- lm(Sales ~ Spend+Month,
data = marketing)
modelomarketing
modelores <- lm(resistencia ~ concentracion +
I(concentracion^2)
,data = datos)
modelores
modelorestres <- lm(resistencia ~ concentracion +
I(concentracion^3)
,data = datos)
modelorestres
modelorestres <- lm(resistencia ~ concentracion +
I^3(concentracion)
,data = datos)
modelorestres <- lm(resistencia ~ concentracion +
I(concentracion^3)
,data = datos)
modelorestres
modelo <- lm(resistencia ~ concentracion +
I(concentracion^2)
,data = datos)
prediccion <- predict(modelo, c(16,17))
prediccion <- predict(modelo, data.frame(concentracion=c(16,17)))
prediccion
modelo <- lm(resistencia ~ concentracion +
I(concentracion^2) + I(concentracion^3)
,data = datos)
prediccion <- predict(modelo, data.frame(concentracion=c(16,17)))
prediccion
View(USArrests)
nlevels(datosN)
nlevels(datosNY)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datosNY <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNY$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNY$reviews_per_month <- ifelse(datosNY$reviews_per_month =="", NA, datos$reviews_per_month)
View(datosNY)
datosNY$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNY$reviews_per_month <- ifelse(datosNY$reviews_per_month =="", NA, datos$reviews_per_month)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datosNY <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNY
View(datosNY)
nlevels(datosNY)
datosNYTest<- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNYTest$reviews_per_month <- ifelse(datosNY$reviews_per_month =="", NA, datos$reviews_per_month)
View(datosNY)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin),mfv(datosNYOrigin, na_rm=TRUE),datosNYOrigin$last_review)
library("modeest")
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin),mfv(datosNYOrigin, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review),mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
View(datosNYOrigin)
library("modeest")
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review),mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
stats<-boxplot.stats(datosNYOrigin$number_of_reviews)
stats$out
length(boxplot.stats(datosNYOrigin)$out)
ati<-length(boxplot.stats(datosNYOrigin)$out)
ati<-length(boxplot.stats(datosNYOrigin$number_of_reviews)$out)
ati
propiedades <- factor(datosNYOrigin$neighbourhood)
nlevels(propiedades)
colnames(propiedades)
libary("dplyr")
install.packages("dplyr")
library("dplyr")
resumen<- datosNYOrigin%>%
resumen
group_by(neighbourhood)%>%
group_by
datosNYOrigin%>%filter(datosNYOrigin$room_type)%>%
summarize(mean(daytosNYOrigin$room_type))
room <- factor(datosNYOrigin$room_type)
room
nlevels(room)
room
propiedades<-sum(datosNYOrigin$price>=5000 & datosNYOrigin<=7500)
propiedades
nlevels(datosNYTest)
length(datosNYTest)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
View(datosNYOrigin)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
ati<-length(boxplot.stats(datosNYOrigin$number_of_reviews)$out)
ati
datosNYOrigin
View(datosNYOrigin)
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest<- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNYTest$reviews_per_month <- ifelse(datosNY$reviews_per_month =="", NA, datos$reviews_per_month)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest<- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
library("modeest")
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm="07/07/2023"),datosNYOrigin$last_review)
View(datosNYOrigin)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm="07/07/2023"),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm="07/07/2023"),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest<- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNYTest$last_review <- ifelse(datosNYTest$last_review =="", NA, datosNY$last_review)
datosNYTest$last_review <- ifelse(datosNYTest$last_review =="", NA, datosNYTest$last_review)
datosNYTest$reviews_per_month <- ifelse(datosNYTest$reviews_per_month =="", NA, datosNYTest$reviews_per_month)
View(datosNYTest)
length(datosNYTest)
length(is.na(datosNYTest))
length(is.na(datosNYTest))
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
View(datosNYOrigin)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review== is.empty.model(datosNYOrigin$last_review) ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYTest <- na.omit(datosNYTest)
length(is.na(datosNYTest))
propiedades <- factor(datosNYOrigin$neighbourhood)
propiedades
nlevels
datos <- read.csv("resistencia.csv",
header = TRUE,
sep=",",
dec = ".")
View(datos)
tam_train <- floor(0.8*nrow(datos)) #120
secuencia <- seq_len(nrow(datos))
datos_train <- datos[indices_train, 1:4] #80%
indices_train <- sample(secuencia, size = tam_train)
datos_train <- datos[indices_train, 1:4] #80%
class(datos)
class(datos$Species)
View(iris)
datos <- iris
View(datos)
class(datos)
class(datos$Species)
datos[,1:4] <- scale(datos[,1:4])
View(datos)
tam_train <- floor(0.8*nrow(datos)) #120
secuencia <- seq_len(nrow(datos))
class(secuencia)
indices_train <- sample(secuencia, size = tam_train)
datos_train <- datos[indices_train, 1:4] #80%
datos_test <- datos[-indices_train,1:4]#20% devuelve todas lads filas que no sean las de arriba
clase_train <- datos[indices_train,5]
clase_test <- datos[-indices_train,5]
clase_test <- datos[-indices_train,5]
dim(datos_train)
class(clase_train)
clasificacion <- knn (datos_train,
datos_test,
clase_train,
k=sqrt(nrow(datos)))
install.packages("class")
class(secuencia)
library("class")
clasificacion <- knn (datos_train,
datos_test,
clase_train,
k=sqrt(nrow(datos)))
clasificacion
datos_test_clasificacion <- datos_test
datos_test_clasificacion$Clase <- clasificacion
View(datos_test_clasificacion)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=7)+
geom_text(aes(label=Clase))+
theme(legend.position = "none")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=2)+
geom_text(aes(label=Clase))+
theme(legend.position = "none")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=2)
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=2)+
geom_text(aes(label=Clase))+
theme(legend.position = "none")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=7)+
geom_text(aes(label=Clase))+
theme(legend.position = "none")
tab <- table(clasificacion, clase_test)
diag(tab)
rowSums(tab)
tab
tab <- table(clasificacion, clase_test)
tab
diag(tab)
accuracy <- function(tabla){
sum(diag(tabla)/sum(rowSums(tabla)))*100
}
accuracy
sum(diag(tabla)/sum(rowSums(tabla)))*100
accuracy(tab)
install.packages("png")
library("png")
imagen
setwd("/Users/CC7/Documents/Mine")
imagen<-readPNG("17.png",TRUE)
imagen
install.packages("png")
library("png")
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
install.packages("png")
matriz <- cbind(as.integer(which(imagen < -1)%%28),which(imagen < -1)/28)
plot(matriz2)
matriz <- cbind(as.integer(which(imagen < -1)%%28),which(imagen < -1)/28)
plot(matriz)
imagen <- readPNG("17.png",TRUE)
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
imagen<-imagen[,nrow(imagen):1]
matriz <- cbind(as.integer(which(imagen < -1)%%28),which(imagen < -1)/28)
plot(matriz)
agrupamiento<-kmeans(matriz,2)
plot(matriz,col=agrupamiento$cluster)
install.packages("dbscan")
library("dbscan")
hullplot(matriz,agrupamiento)
install.packages("dbscan")
install.packages("Rcpp")
library("dbscan")
library("Rcpp")
install.packages("dbscan")
install.packages("Rcpp")
View(matriz)
densidad<-dbscan(2)
densidad<-dbscan(2)
install.packages("dbscan")
library("dbscan")
library("Rcpp")
library("dbscan")
library("Rcpp")
densidad<-dbscan(2)
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
install.packages("png")
library("png")
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
install.packages("png")
library("png")
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
install.packages("png")
densidad<-dbscan(2)
library("dbscan")
install.packages("dbscan")
install.packages("dbscan")
