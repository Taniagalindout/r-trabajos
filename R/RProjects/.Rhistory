a<- matrix(c(19,138,1335,
138,1335, 14935.5,
1335, 14935.5,181427), nrow = 3)
# coeficientes a la izquiera del =
b <- matrix(c(649.5, 5306.6, 51666.75), nrow = 3)
solve(a,b)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
resistencia <- read.csv("resistencia.csv",
header = TRUE,
sep=",",
dec = ".")
View(resistencia)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
resistencia <- read.csv("resistencia.csv",
header = TRUE,
row.names = 1,
sep=",",
dec = ".")
View(resistencia)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datos <- read.csv("resistencia.csv",
header = TRUE,
row.names = 1,
sep=",",
dec = ".")
View(datos)
modelo <- lm(resistencia, concentracion,
data = datos)
modelo
modelo <- lm(resistencia, concentracion,
data = datos)
modelo
datos <- read.csv("resistencia.csv",
header = TRUE,
sep=",",
dec = ".")
View(datos)
modelo <- lm(resistencia, concentracion,
data = datos)
modelo
modelo <- lm(resistencia ~ concentracion,
data = datos)
modelo
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
marketing <- read.csv("marketing.csv",
header = TRUE,
sep=",",
dec = ".")
solve(a,b)
View(marketing)
modelomarketing <- lm(Sales ~ Spend,
data = marketing)
modelomarketing
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
marketing <- read.csv("marketing.csv",
header = TRUE,
sep=",",
dec = ".")
View(marketing)
marketing <- marketing[1:12,1:3]
View(marketing)
modelomarketing <- lm(Sales ~ Spend+Month,
data = marketing)
modelomarketing
modelores <- lm(resistencia ~ concentracion +
I(concentracion^2)
,data = datos)
modelores
modelorestres <- lm(resistencia ~ concentracion +
I(concentracion^3)
,data = datos)
modelorestres
modelorestres <- lm(resistencia ~ concentracion +
I^3(concentracion)
,data = datos)
modelorestres <- lm(resistencia ~ concentracion +
I(concentracion^3)
,data = datos)
modelorestres
modelo <- lm(resistencia ~ concentracion +
I(concentracion^2)
,data = datos)
prediccion <- predict(modelo, c(16,17))
prediccion <- predict(modelo, data.frame(concentracion=c(16,17)))
prediccion
modelo <- lm(resistencia ~ concentracion +
I(concentracion^2) + I(concentracion^3)
,data = datos)
prediccion <- predict(modelo, data.frame(concentracion=c(16,17)))
prediccion
View(USArrests)
nlevels(datosN)
nlevels(datosNY)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datosNY <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNY$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNY$reviews_per_month <- ifelse(datosNY$reviews_per_month =="", NA, datos$reviews_per_month)
View(datosNY)
datosNY$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNY$reviews_per_month <- ifelse(datosNY$reviews_per_month =="", NA, datos$reviews_per_month)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datosNY <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNY
View(datosNY)
nlevels(datosNY)
datosNYTest<- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNYTest$reviews_per_month <- ifelse(datosNY$reviews_per_month =="", NA, datos$reviews_per_month)
View(datosNY)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin),mfv(datosNYOrigin, na_rm=TRUE),datosNYOrigin$last_review)
library("modeest")
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin),mfv(datosNYOrigin, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review),mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
View(datosNYOrigin)
library("modeest")
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review),mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
stats<-boxplot.stats(datosNYOrigin$number_of_reviews)
stats$out
length(boxplot.stats(datosNYOrigin)$out)
ati<-length(boxplot.stats(datosNYOrigin)$out)
ati<-length(boxplot.stats(datosNYOrigin$number_of_reviews)$out)
ati
propiedades <- factor(datosNYOrigin$neighbourhood)
nlevels(propiedades)
colnames(propiedades)
libary("dplyr")
install.packages("dplyr")
library("dplyr")
resumen<- datosNYOrigin%>%
resumen
group_by(neighbourhood)%>%
group_by
datosNYOrigin%>%filter(datosNYOrigin$room_type)%>%
summarize(mean(daytosNYOrigin$room_type))
room <- factor(datosNYOrigin$room_type)
room
nlevels(room)
room
propiedades<-sum(datosNYOrigin$price>=5000 & datosNYOrigin<=7500)
propiedades
nlevels(datosNYTest)
length(datosNYTest)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
View(datosNYOrigin)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
ati<-length(boxplot.stats(datosNYOrigin$number_of_reviews)$out)
ati
datosNYOrigin
View(datosNYOrigin)
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest<- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNYTest$reviews_per_month <- ifelse(datosNY$reviews_per_month =="", NA, datos$reviews_per_month)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
View(datosNYOrigin)
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest<- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
library("modeest")
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm="07/07/2023"),datosNYOrigin$last_review)
View(datosNYOrigin)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm="07/07/2023"),datosNYOrigin$last_review)
datosNYOrigin$reviews_per_month<-ifelse(is.na(datosNYOrigin$reviews_per_month),mean(datosNYOrigin$reviews_per_month,na.rm = TRUE),datosNYOrigin$reviews_per_month)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm="07/07/2023"),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin <- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest<- read.csv("AB_NYC_2019.csv",
header = TRUE,
sep=",",
dec = ".")
datosNYTest$last_review <- ifelse(datosNY$last_review =="", NA, datosNY$last_review)
datosNYTest$last_review <- ifelse(datosNYTest$last_review =="", NA, datosNY$last_review)
datosNYTest$last_review <- ifelse(datosNYTest$last_review =="", NA, datosNYTest$last_review)
datosNYTest$reviews_per_month <- ifelse(datosNYTest$reviews_per_month =="", NA, datosNYTest$reviews_per_month)
View(datosNYTest)
length(datosNYTest)
length(is.na(datosNYTest))
length(is.na(datosNYTest))
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) || datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review=="" ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
View(datosNYOrigin)
datosNYOrigin$last_review<-ifelse(is.na(datosNYOrigin$last_review) | datosNYOrigin$last_review== is.empty.model(datosNYOrigin$last_review) ,mfv(datosNYOrigin$last_review, na_rm=TRUE),datosNYOrigin$last_review)
datosNYTest <- na.omit(datosNYTest)
length(is.na(datosNYTest))
propiedades <- factor(datosNYOrigin$neighbourhood)
propiedades
nlevels
datos <- read.csv("resistencia.csv",
header = TRUE,
sep=",",
dec = ".")
View(datos)
tam_train <- floor(0.8*nrow(datos)) #120
secuencia <- seq_len(nrow(datos))
datos_train <- datos[indices_train, 1:4] #80%
indices_train <- sample(secuencia, size = tam_train)
datos_train <- datos[indices_train, 1:4] #80%
class(datos)
class(datos$Species)
View(iris)
datos <- iris
View(datos)
class(datos)
class(datos$Species)
datos[,1:4] <- scale(datos[,1:4])
View(datos)
tam_train <- floor(0.8*nrow(datos)) #120
secuencia <- seq_len(nrow(datos))
class(secuencia)
indices_train <- sample(secuencia, size = tam_train)
datos_train <- datos[indices_train, 1:4] #80%
datos_test <- datos[-indices_train,1:4]#20% devuelve todas lads filas que no sean las de arriba
clase_train <- datos[indices_train,5]
clase_test <- datos[-indices_train,5]
clase_test <- datos[-indices_train,5]
dim(datos_train)
class(clase_train)
clasificacion <- knn (datos_train,
datos_test,
clase_train,
k=sqrt(nrow(datos)))
install.packages("class")
class(secuencia)
library("class")
clasificacion <- knn (datos_train,
datos_test,
clase_train,
k=sqrt(nrow(datos)))
clasificacion
datos_test_clasificacion <- datos_test
datos_test_clasificacion$Clase <- clasificacion
View(datos_test_clasificacion)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=7)+
geom_text(aes(label=Clase))+
theme(legend.position = "none")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=2)+
geom_text(aes(label=Clase))+
theme(legend.position = "none")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=2)
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=2)+
geom_text(aes(label=Clase))+
theme(legend.position = "none")
ggplot(datos_test_clasificacion,
aes(x=Sepal.Length, y=Sepal.Width,
color = Clase, fill=Clase))+
geom_point(size=7)+
geom_text(aes(label=Clase))+
theme(legend.position = "none")
tab <- table(clasificacion, clase_test)
diag(tab)
rowSums(tab)
tab
tab <- table(clasificacion, clase_test)
tab
diag(tab)
accuracy <- function(tabla){
sum(diag(tabla)/sum(rowSums(tabla)))*100
}
accuracy
sum(diag(tabla)/sum(rowSums(tabla)))*100
accuracy(tab)
install.packages("png")
library("png")
imagen
setwd("/Users/CC7/Documents/Mine")
imagen<-readPNG("17.png",TRUE)
imagen
install.packages("png")
library("png")
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
install.packages("png")
matriz <- cbind(as.integer(which(imagen < -1)%%28),which(imagen < -1)/28)
plot(matriz2)
matriz <- cbind(as.integer(which(imagen < -1)%%28),which(imagen < -1)/28)
plot(matriz)
imagen <- readPNG("17.png",TRUE)
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
imagen<-imagen[,nrow(imagen):1]
matriz <- cbind(as.integer(which(imagen < -1)%%28),which(imagen < -1)/28)
plot(matriz)
agrupamiento<-kmeans(matriz,2)
plot(matriz,col=agrupamiento$cluster)
install.packages("dbscan")
library("dbscan")
hullplot(matriz,agrupamiento)
install.packages("dbscan")
install.packages("Rcpp")
library("dbscan")
library("Rcpp")
install.packages("dbscan")
install.packages("Rcpp")
View(matriz)
densidad<-dbscan(2)
densidad<-dbscan(2)
install.packages("dbscan")
library("dbscan")
library("Rcpp")
library("dbscan")
library("Rcpp")
densidad<-dbscan(2)
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
install.packages("png")
library("png")
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
install.packages("png")
library("png")
setwd("/Users/CC7/Downloads")
imagen <- readPNG("17.png",TRUE)
install.packages("png")
densidad<-dbscan(2)
library("dbscan")
install.packages("dbscan")
install.packages("dbscan")
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datosEj <- read.csv("ejercicioc.csv",
header = TRUE,
sep=",",
dec = ".")
datosEj <- read.csv("ejercicioc.csv")
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datosEj <- read.csv("ejercicioc.csv",
header = TRUE,
sep=",",
dec = ".")
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datosEj <- read.csv("ejercicioc.csv")
View(datosEj)
setwd("C:\\Users\\CC7\\ArchivosP\\r-trabajos\\R\\RProjects")
datosEj <- read.csv("ejercicioNuevo.csv",
header = TRUE,
sep=",",
dec = ".")
View(datosEj)
modelo <- lm(resistencia ~ concentracion,
data = datos)
modeloNuevo <- lm(Tamanio.del.cerebro ~ Altura.en.metros,
data = datosEj)
modeloNuevo
modeloMultiple <- lm(Tamanio.del.cerebro ~ Altura.en.metros+IQ,
data = datosEj)
modeloMultiple
modeloMultiple <- lm(IQ  ~ Tamanio.del.cerebro + Altura.en.metros,
data = datosEj)
modeloMultiple
summary(modeloMultiple)
library("tm")
install.packages("tm")
install.packages("SnowballC")
library("tm")
library("SnowballC")
news <- c("Michigan Charges 16 in False Elector Scheme to Overturn Trump's 2020 Loss",
"'This is an endgame move': Trump receives target letter from Special Counsel in 2020 election probe",
"U.S. soldier believed to be in North Korean custody after unauthorized border crossing, officials say",
"Extreme heat in Arizona increased hospitalizations to pandemic levels at one medical center",
"Australian man and his dog rescued by Mexican tuna boat after drifting 3 months in the Pacific Ocean",
"Russia Launches Strikes on Southern Ukraine After Crimea Bridge Attack: Ukraine War News"
)
vector <- VectorSource(news)
corpus <- Corpus(vector)
corpus <- tm_map(corpus,removeWords, stopwords("english"))
corpus <- tm_map(corpus,removePunctuation)
corpus <- tm_map(corpus,stemDocument)
matriz <- DocumentTermMatrix(corpus)
agrupamiento <- kmeans(dist(matriz),5)
agrupamiento
news[agrupamiento$cluster == 5]
news <- c("Michigan Charges 16 in False Elector Scheme to Overturn Trump's 2020 Loss",
"'This is an endgame move': Trump receives target letter from Special Counsel in 2020 election probe",
"U.S. soldier believed to be in North Korean custody after unauthorized border crossing, officials say",
"Extreme heat in Arizona increased hospitalizations to pandemic levels at one medical center",
"Australian man and his dog rescued by Mexican tuna boat after drifting 3 months in the Pacific Ocean",
"Russia Launches Strikes on Southern Ukraine After Crimea Bridge Attack: Ukraine War News"
)
vector <- VectorSource(news)
corpus <- Corpus(vector)
corpus <- tm_map(corpus,removeWords, stopwords("english"))
corpus <- tm_map(corpus,removePunctuation)
corpus <- tm_map(corpus,stemDocument)
matriz <- DocumentTermMatrix(corpus)
agrupamiento <- kmeans(dist(matriz),5)
agrupamiento
news[agrupamiento$cluster == 5]
news[agrupamiento$cluster == 2]
agrupamiento$cluster
datos<-USArrest
datos<-USArrests
View(datos)
install.packages("stats")
library("stats")
install.packages("stats")
library("stats")
pca<-  prcomp(datos,center=TRUE,scale=TRUE)
pca
pc1=-0.535*datos$Murder-0.583*datos$Assault-0.278*datos$UrbanPop-0.543*datos$Rape
pc2=0.418*datos$Murder+0.187*datos$Assault-0.872*datos$UrbanPop-0.167*datos$Rape
pc3=-0.341*datos$Murder-0.268*datos$Assault-0.378*datos$UrbanPop+0.817*datos$Rape
pc4=0.649*datos$Murder-0.743*datos$Assault+0.133*datos$UrbanPop+0.089*datos$Rape
datos$pc1<-pc1
datos$pc2<-pc2
datos$pc3<-pc3
datos$pc4<-pc4
datos
setwd("C:\\Users\CC7\\Documents\\Examen Tercera Unidad Hugo")
setwd("C:\\Users\CC7\\Documents\\Examen")
setwd("C:\\Users\\CC7\\Downloads\\examen")
turistas <- read.csv("Turistas.csv")
View(turistas)
options(scipen = 999)
turistas <- read.csv("Turistas.csv")
View(turistas)
turistas
modelo <- lm(Dinero_Gastado ~ Cantidad_turistas, data = turistas)
modelo
print("y = -467196947.5 + b1=739.9x ")
summary(modelo)
prediccion <- predict(modelo, data.frame(Cantidad_turistas = 2500000))
prediccion
print(paste("El valor es ", prediccion))
prediccion
print("Gastará 1382670972 ")
a <- matrix(c(10,19755, 39026085,
19755,39026085,77096356875,
39026085,77096356875,152304818901333), nrow=3)
b <- matrix(c(711.02,1405144.02,2776903456), nrow = 3)
solve(a,b)
options(scipen = 999)
solve(a,b)
a <- matrix(c(10,19755, 39026085,
19755,39026085,77096356875,
39026085,77096356875,152304818901333), nrow=3)
a
b <- matrix(c(711.02,1405144.02,2776903456), nrow = 3)
b
solve(a,b)
a <- matrix(c(10,19755,39026085,19755,39026085,77096356875,39026085,77096356875,152304818901333), nrow=3)
a
b <- matrix(c(711.02,1405144.02,2776903456), nrow = 3)
b
solve(a,b)
seguros <- read.csv("Seguros.csv")
seguros
modeloS <- lm(Costo ~ Anio + I(Anio ^2), data = seguros)
modeloS
solve(a,b)
modeloS <- lm(Costo ~ Anio + I(Anio ^2), data = seguros)
modeloS
